@node Listing of token
@appendix Listing of Token

@noindent
This is the listing of the tokenizer discussed in @ref{Using Alex}.

@smallexample
-- Tokenizer for a simple programming language

token ::=  ID(symbol)
 | INT(number)
 | REAL(number) 
 | KEY(symbol)
 | LPAREN | RPAREN | COMMA | SEMI;

%%

-- keyword rules

"if" => @{ KEY('if) @}
"then" => @{ KEY('then) @}
"else" => @{ KEY('else) @}
"while" => @{ KEY('while) @}
"do" => @{ KEY('do) @}

-- identifier rule

[a-zA-Z_][a-zA-Z_0-9]* =>  @{ ID(mkSymb(yyTok)) @}

-- number rules

"-"?[0-9]+ => @{ INT(mkNum(yyTok)) @}

"-"?[0-9]+"."[0-9]+([eE][-+]?[0-9]+)? => @{ REAL(mkNum(yyTok)) @}

-- punctuation rules

"(" => @{ 'LPAREN @}
")" => @{ 'RPAREN @}
"," => @{ 'COMMA @}
";" => @{ 'SEMI @}

-- White space and comments
[ \n\t\b\r]+ => skip     	-- ignore white space

"--"[^\n]*"\n"		       	-- line comment

"/*" => <comment>        	-- continuous comment

<comment> "*/" => <initial>
<comment> .	         	-- implies a skip

%%

-- The postamble

mkSymb(tok) => symbol%%(string%%tok);
mkNum(tok) => number%%(string%%tok));
@end smallexample
