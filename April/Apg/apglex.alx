/*
 * Lexical rules for the apg parser
 */

#include "lextok.ah";

%%

-- Apg keyword rules

"%token" => 		{ TOKEN }
"%left" => 		{ LEFT }
"%right" => 		{ RIGHT }
"%nonassoc" => 		{ NONASSOC }
"%prec" => 		{ PREC }
"%expect" => 		{ EXPECT }
"%start" => 		{ START }
"%type" => 		{ TYPE }

-- identifier rule

[a-zA-Z_][a-zA-Z_0-9]* => { ID(yyTok) }

-- number rule

"-"?[0-9]+ => { NUM(number%%(string%%yyTok)) }

-- punctuation rules

-- preamble text marker
-- Accept anything between two %{ %} markers
"%{"([^%]*|"%"[^}])*"%}" => 	{ CENTBRACE(trim(yyTok,2)) }

-- action text
"{"([^}]|"\n")*"}" => 	{ BRACE(trim(yyTok,1)) }

":" => 			{ COLON }
"|" => 			{ BAR }
";" => 			{ SEMI }
-- rule file marker
"%%" => 		{ MARK }

-- White space and comments
[ \t\b\r\n]+      		-- ignore white space

"--"[^\n]*"\n"		       	-- line comment

"/*" => <comment>        	-- continuous comment

<comment> "*/" => <initial>
<comment> .|"\n"         	-- other characters in a comment are ignored

%%

trim(S,C) =>
  front(tail(S,C),listlen(S)-C*2);
